#include <stdio.h>

#define MAX_ITEMS 10

int max(int a, int b) {
    return (a > b) ? a : b;
}

int knapsack(int n, int weights[], int values[], int capacity) {
    int dp[MAX_ITEMS + 1][capacity + 1];

    for (int i = 0; i <= n; i++) {
        for (int w = 0; w <= capacity; w++) {
            if (i == 0 || w == 0) {
                dp[i][w] = 0;
            } else if (weights[i - 1] <= w) {
                dp[i][w] = max(values[i - 1] + dp[i - 1][w - weights[i - 1]], dp[i - 1][w]);
            } else {
                dp[i][w] = dp[i - 1][w];
            }
        }
    }
    return dp[n][capacity];
}

int main() {
    int n, capacity;
    printf("Enter the number of objects: ");
    scanf("%d", &n);

    int weights[MAX_ITEMS], values[MAX_ITEMS];
    for (int i = 0; i < n; i++) {
        printf("Enter weight and value for object %d: ", i + 1);
        scanf("%d %d", &weights[i], &values[i]);
    }

    printf("Enter the capacity of the knapsack: ");
    scanf("%d", &capacity);

    int maxProfit = knapsack(n, weights, values, capacity);
    printf("Maximum profit: %d\n", maxProfit);

    return 0;
}
